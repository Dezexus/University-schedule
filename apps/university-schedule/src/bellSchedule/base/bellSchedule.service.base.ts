/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BellSchedule as PrismaBellSchedule } from "@prisma/client";

export class BellScheduleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BellScheduleCountArgs, "select">
  ): Promise<number> {
    return this.prisma.bellSchedule.count(args);
  }

  async bellSchedules(
    args: Prisma.BellScheduleFindManyArgs
  ): Promise<PrismaBellSchedule[]> {
    return this.prisma.bellSchedule.findMany(args);
  }
  async bellSchedule(
    args: Prisma.BellScheduleFindUniqueArgs
  ): Promise<PrismaBellSchedule | null> {
    return this.prisma.bellSchedule.findUnique(args);
  }
  async createBellSchedule(
    args: Prisma.BellScheduleCreateArgs
  ): Promise<PrismaBellSchedule> {
    return this.prisma.bellSchedule.create(args);
  }
  async updateBellSchedule(
    args: Prisma.BellScheduleUpdateArgs
  ): Promise<PrismaBellSchedule> {
    return this.prisma.bellSchedule.update(args);
  }
  async deleteBellSchedule(
    args: Prisma.BellScheduleDeleteArgs
  ): Promise<PrismaBellSchedule> {
    return this.prisma.bellSchedule.delete(args);
  }
}
